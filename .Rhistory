xtabs(~`Rank Code`+Rank, data=X2018_04_04_OrderofMarch_JDull)
X2018_04_04_OrderofMarch_JDull[X2018_04_04_OrderofMarch_JDull$`Rank Code`==6,]
mo <- X2018_04_04_OrderofMarch_JDull
mo <- mo %>% mutate(rank.grp = ifelse(`Rank Code` < 4, "TT", ifelse(`Rank Code` < 6, "V", ifelse(`Rank Code`==7, "Staff", "F/PA"))))
ggplot(mo, aes(x=`Decimal Years Since Hire Date`, fill=rank.grp)) + geom_histogram(position = 'dodge')
fr <- read_excel("~/Downloads/Faculty_Staff Participation in Convocation 2018(1-9).xlsx")
View(fr)
shiny::runApp('github-web/CofI-Shiny/March_Order')
runApp('github-web/CofI-Shiny/March_Order')
Sys.Date()
runApp('github-web/CofI-Shiny/March_Order')
runApp('github-web/CofI-Shiny/March_Order')
?render
runApp('github-web/CofI-Shiny/March_Order')
fr <- read_excel("~/Downloads/Faculty_Staff Participation in Convocation 2018(1-10).xlsx")
runApp('github-web/CofI-Shiny/March_Order')
names(fr)
runApp('github-web/CofI-Shiny/March_Order')
runApp('github-web/CofI-Shiny/March_Order')
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
library(readxl)
np <- read_excel("Downloads/Navigating PEAK_ Minor Data Collection(1-44).xlsx")
View(np)
library(readxl)
np <- read_excel("Downloads/Navigating PEAK_ Minor Data Collection(1-44).xlsx",
col_names = FALSE, skip = 1)
View(np)
library(dplyr)
filter(np, X_3=="jpreszler@collegeofidaho.edu")
names(np)
filter(np, X__3=="jpreszler@collegeofidaho.edu")
install.packages("rethinking")
devtools::install_github("rmcelreath/rethinking")
Credit <- read.csv("~/Downloads/Credit.csv")
View(Credit)
summary(Credit$Rating)
summary(Credit$Income)
summary(Credit[Credit$Income<20,]$Rating)
library(readxl)
np_raw <- read_excel("Downloads/Navigating PEAK_ Minor Data Collection(1-46).xlsx",
col_names = FALSE, skip = 1)
View(np_raw)
np <- select(np_raw, c(4:24))
names(np) <- c("Navigator", "Minor", "Peaks", "Buckets", "Min.Chain", "Structure", "RequiredCrsYN", "ReqType", "Gateway", "Bridge", "Terminal", "ReqCrsList", "MajorRelation", "MajorSat", "Twins", "Prereq", "ProfCnt", "ContingentFac", "NumSemester", "Comments")
View(np)
library(stringr)
names(np)
str_extract(np$Buckets, "[:digit:]")
np$Buckets <- as.numeric(str_extract(np$Buckets, "[:digit:]"))
np_raw<-read_excel("~/Downloads/Navigating PEAK_ Minor Data Collection(1-46).xlsx", col_names = FALSE, skip = 1)
np <- select(np_raw, c(4:24))
names(np) <- c("Navigator", "Minor", "Peaks", "Buckets", "Min.Chain", "Structure", "RequiredCrsYN", "ReqType", "Gateway", "Bridge", "Terminal", "ReqCrsList", "MajorRelation", "MajorSat", "Twins", "Credits", "Prereq", "ProfCnt", "ContingentFac", "NumSemester", "Comments")
np$Buckets <- as.numeric(str_extract(np$Buckets, "[:digit:]"))
np$Min.Chain <- as.numeric(str_extract(np$Min.Chain, "[:digit:]"))
np$Structure <- str_split(np$Structure, "ly[:space:]", simplify=TRUE)[1]
np <- select(np_raw, c(4:24))
names(np) <- c("Navigator", "Minor", "Peaks", "Buckets", "Min.Chain", "Structure", "RequiredCrsYN", "ReqType", "Gateway", "Bridge", "Terminal", "ReqCrsList", "MajorRelation", "MajorSat", "Twins", "Credits", "Prereq", "ProfCnt", "ContingentFac", "NumSemester", "Comments")
np$Buckets <- as.numeric(str_extract(np$Buckets, "[:digit:]"))
np$Min.Chain <- as.numeric(str_extract(np$Min.Chain, "[:digit:]"))
np$Structure <- str_split(np$Structure, "ly[:space:]", simplify=TRUE)[,1]
glimpse(np)
np$Credits <- as.numeric(np$Credits)
np$Credits <- as.numeric(str_extract(np$Credits, "[:digit:]{2}"))
np_raw<-read_excel("~/Downloads/Navigating PEAK_ Minor Data Collection(1-46).xlsx", col_names = FALSE, skip = 1)
np <- select(np_raw, c(4:24))
names(np) <- c("Navigator", "Minor", "Peaks", "Buckets", "Min.Chain", "Structure", "RequiredCrsYN", "ReqType", "Gateway", "Bridge", "Terminal", "ReqCrsList", "MajorRelation", "MajorSat", "Twins", "Credits", "Prereq", "ProfCnt", "ContingentFac", "NumSemester", "Comments")
np$Buckets <- as.numeric(str_extract(np$Buckets, "[:digit:]"))
np$Min.Chain <- as.numeric(str_extract(np$Min.Chain, "[:digit:]"))
np$Structure <- str_split(np$Structure, "ly[:space:]", simplify=TRUE)[,1]
np$Credits <- as.numeric(str_extract(np$Credits, "[:digit:]{2}"))
?mean
class.list.2018.2019 <- read.csv("~/gitlab/peak-nav/class-list-2018-2019.csv")
View(class.list.2018.2019)
reqCourses <- np %>% select(ReqCrsList, Minor) %>%
filter(!is.na(ReqCrsList))
reqCourses$ReqCrsList <- str_remove_all(reqCourses$ReqCrsList, "[:space:]")
reqCourses$ReqCrsList <- str_replace_all(reqCourses$ReqCrsList, ";",",")
reqCourses$ReqCrsList <- str_replace_all(reqCourses$ReqCrsList, "and",",")
reqCourses$ReqCrsList <- str_remove_all(reqCourses$ReqCrsList, "+L")
reqCourses$ReqCrsList <- str_remove_all(reqCourses$ReqCrsList, "+")
View(reqCourses)
reqCourses$ReqCrsList <- str_replace_all(reqCourses$ReqCrsList, "\(*\)","")
reqCourses <- np %>% select(ReqCrsList, Minor) %>%
filter(!is.na(ReqCrsList))
reqCourses$ReqCrsList <- str_remove_all(reqCourses$ReqCrsList, "[:space:]")
reqCourses$ReqCrsList <- str_replace_all(reqCourses$ReqCrsList, '\(.\)',"")
str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,5}-[:digit:]{3}")
?str_extract
reqCourses <- np %>% select(ReqCrsList, Minor) %>%
filter(!is.na(ReqCrsList))
reqCourses$ReqCrsList <- str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,5}-[:digit:]{3}", simplify = TRUE)
reqCourses <- np %>% select(ReqCrsList, Minor) %>%
filter(!is.na(ReqCrsList))
reqCourses <- np %>% select(ReqCrsList, Minor) %>%
filter(!is.na(ReqCrsList))
reqCourses$ReqCrsList2 <- str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}-[:digit:]{3}", simplify = TRUE)
reqCourses$ReqCrsList2 <- str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}-[:digit:]{3}", simplify = TRUE) %>% str_c(sep=",")
reqCourses$ReqCrsList2 <- str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}-[:digit:]{3}", simplify = TRUE) %>% str_c(sep=",", collapse = NULL)
str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}-[:digit:]{3}", simplify = TRUE)
str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}-[:digit:]{3}", simplify = TRUE) %>% bind_cols()
bind_cols(str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}-[:digit:]{3}", simplify = TRUE))
reqCourses <- np %>% select(ReqCrsList, Minor) %>%
filter(!is.na(ReqCrsList))
ReqCrsList2 <- str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}-[:digit:]{3}", simplify = TRUE)
?str_c
str_c(ReqCrsList2[1,], sep=",")
str_c(ReqCrsList2, sep=",")
str_c(ReqCrsList2[1:36,], sep=",")
typeof(ReqCrsList2)
df <- data.frame(Minor = reqCourses$Minor, ReqCrsList2)
head(df)
library(tidyr)
gather(key=Course, value=val, -Minor)
gather(df, key=Course, value=val, -Minor)
36*8
str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}[\-| ][:digit:]{3}", simplify = TRUE)
str_extract_all(reqCourses$ReqCrsList, "[:upper:]{3,6}[-| ][:digit:]{3}", simplify = TRUE)
plot(Rating~Education+Income+Age+Balance, data=Credit)
str_extract(np$ReqType, "[gateway]|[bridge]|[capstone]|[;]+")
str_extract(np$ReqType, "gateway|bridge|capstone|;")
bno <- select(np, Peaks, Gateway, Bridge, Terminal)
View(bno)
bnoR <- full_join(data.frame(Peaks = c("HFA","SSH","NSM","PSE")),data.frame(Type = c("Gateway","Bridge", "Terminal")))
bnoR <- outer(data.frame(Peaks = c("HFA","SSH","NSM","PSE")),data.frame(Type = c("Gateway","Bridge", "Terminal")))
bnOffer <- select(np, Peaks, Gateway, Bridge, Terminal) %>% gather(key=Type, value=Offered, -Peaks)
View(bnOffer)
bnOffer <- select(np, Peaks, Gateway, Bridge, Terminal) %>% gather(key=Type, value=Offered, -Peaks) %>% filter(!is.na(Offered))
View(bnOffer)
bnOffer <- select(np, Peaks, Gateway, Bridge, Terminal) %>% gather(key=Type, value=Offered, -Peaks) %>% filter(!is.na(Offered)) %>% group_by(Peaks, Type) %>% summarise(Offered = str_flatten(Offered))
bnOffer <- select(np, Peaks, Gateway, Bridge, Terminal) %>%
gather(key=Type, value=Offered, -Peaks) %>%
filter(!is.na(Offered)) %>% group_by(Peaks, Type) %>%
summarise(Offered = str_flatten(Offered)) %>%
mutate(Fall_Only = str_count(Offered, "Fall"),
Spring_Only = str_count(Offered, "Spring"),
Winter_Only = str_count(Offered, "Winter"),
Every_Semester = str_count(Offered, "Every"),
Less_Than_Yearly = str_count(Offered, "Less")
)
bnOffer <- select(np, Peaks, Gateway, Bridge, Terminal) %>%
gather(key=Type, value=Offered, -Peaks) %>%
filter(!is.na(Offered)) %>% group_by(Peaks, Type) %>%
summarise(Offered = str_flatten(Offered)) %>%
mutate(Fall_Only = str_count(Offered, "Fall"),
Spring_Only = str_count(Offered, "Spring"),
Winter_Only = str_count(Offered, "Winter"),
Every_Semester = str_count(Offered, "Every"),
Less_Than_Yearly = str_count(Offered, "Less"),
Total = str_count(Offered, ";"),
Check = (Total == (Fall_Only+Spring_Only+Winter_Only+Every_Semester+Less_Than_Yearly))
)
library(readxl)
MAT_212_Fall_2018_1_9_ <- read_excel("Downloads/MAT-212 Fall 2018(1-9).xlsx")
View(MAT_212_Fall_2018_1_9_)
library(readxl)
surv <- read_excel("Downloads/MAT-212 Fall 2018(1-20).xlsx")
View(surv)
duplicates(surv)
duplicated(surv)
duplicated(surv[,3:21])
surv[11:12,]
View(surv[11:12,])
library(stringr)
shiny::runApp('Downloads/SSregression-master')
install.packages("shinydashboard")
runApp('Downloads/SSregression-master')
install.packages("ggExtra")
runApp('Downloads/SSregression-master')
install.packages("HistData")
library(HistData)
leg <- read.csv("~/gitlab/m212/leg-data.csv", header=TRUE)
library(ggplot2)
ggplot(leg, aes(y=Leg, x=Gender))+geom_boxplot()
ggplot(GaltonFamilies, aes(x=father, y=mother))+geom_point()
ggplot(GaltonFamilies, aes(x=father, y=mother))+geom_point(alpha=.1)
lm(mother~father, data=GaltonFamilies)
summary(lm(mother~father, data=GaltonFamilies))
cor(GaltonFamilies$father, GaltonFamilies$mother)
library(dplyr)
gf <- group_by(GaltonFamilies, family) %>% summarise(mother=max(mother), father=max(father))
summary(lm(mother~father, data=gf))
cor(gf$father, gf$mother
)
cor(leg$Stride, leg$Leg)
ggplot(leg, aes(x=Leg, y=Stride))+geom_point()
ggplot(leg, aes(x=Leg, y=Stride, col=Foot))+geom_point()
ggplot(leg, aes(x=Leg, y=Stride, col=Gender))+geom_point()
cor(leg$Stride, leg$Leg)
cor(leg[leg$Gender=="m",]$Stride, leg[leg$Gender=="m",]$Leg)
cor(leg[leg$Gender=="f",]$Stride, leg[leg$Gender=="f",]$Leg)
eval_data_files <- c("FA17_MAT-125-04_Data.csv", "FA17_CSC-150-01_Data.csv", "FA17_MAT-399T-01_Data.csv", "WI18_MAT-370-01_Data.csv", "SP18_CSC-150-01_Data.csv", "SP18_CSC-270-01_Data.csv", "SP18_MAT-125-01_Data.csv")
part <- read.csv("/home/jpreszler/gitlab/misc/eval/crs_evals/part.csv", header=TRUE)
read_eval <- function(file){
file2 <- paste0("/home/jpreszler/gitlab/misc/eval/crs_evals/",file)
#read csv, only keep rows with at least 1 answered question
df <- read.csv(file2, header=TRUE) %>% filter_at(vars(-purpose, -standing,-mark), any_vars(. !=0))
#recode question columns as factors
# df[,str_detect(names(df), "Q")] <- apply(df[, str_detect(names(df), "Q")], 2, factor,levels=c("0","1","2","3","4","5"), labels=c('NA', "Strongly Agree", "Agree", "Neutral", "Disagree", "Strongly Disagree")) %>% data.frame()
fnsplit <- str_split(file, "_", n=3, simplify = TRUE)
df <- mutate(df, term = fnsplit[1], course=fnsplit[2])
}
evals <- map_dfr(eval_data_files, read_eval)
library(dplyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(purrr)
library(stringr)
evals <- map_dfr(eval_data_files, read_eval)
for(i in 4:27){
evals[,i] <- factor(evals[,i],levels=c("0","1","2","3","4","5"), labels=c('NA', "Strongly Agree", "Agree", "Neutral", "Disagree", "Strongly Disagree"))
}
long_evals <- gather(evals, key=Question, value = Response, -c(mark, purpose, standing, term, course))
long_evals$Response <- factor(long_evals$Response, levels(factor(long_evals$Response))[c(3,5,1,4,2,6)])
View(evals)
View(part)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(stringr)
mmhc <- read.csv("~/gitlab/peak-nav/maj-min-cleaned-2013.csv")
View(mmhc)
mmdata <- read.csv("~/Downloads/JPreszler_Program Review Historic Grads for selected majors_ALL_082518.csv")
View(mmdata)
View(mmdata)
mmdata <- read.csv("~/Downloads/JPreszler_Program Review Historic Grads for selected majors_ALL_082518.csv") %>%
select(Grad.Year, Degree, Major.1.Major.2.Major.3,
Minor.1.Minor.2.Minor.3) %>%
rename(Majors=Major.1.Major.2.Major.3,
Minors=Minor.1.Minor.2.Minor.3) %>%
filter(Grad.Year >2012)
View(mmdata)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(stringr)
library(knitr)
mmdata <- read.csv("~/Downloads/JPreszler_Program Review Historic Grads for selected majors_ALL_082518.csv") %>%
select(Grad.Year, Degree, Major.1.Major.2.Major.3,
Minor.1.Minor.2.Minor.3) %>%
rename(Majors=Major.1.Major.2.Major.3,
Minors=Minor.1.Minor.2.Minor.3) %>%
filter(Grad.Year >2012, Grad.Year<2018)
bsMajors <- mmdata %>% filter(Degree=="BS") %>% group_by(Majors) %>%
summarise(Count = n(), numYears.with.Graduate = n_distinct(Grad.Year))
mmdata %>% filter(Majors %in% bsMajors$Majors, str_detect(Majors, ",")) %>%
group_by(Majors, Degree) %>%
summarise(Count = n())%>% spread(key=Degree, value=Count) %>%
mutate(BA_prop = paste0(round(BA/BS,3)*100,"%")) %>%
datatable(rownames = FALSE, filter="top")
mmdata %>% filter(Majors %in% bsMajors$Majors, str_detect(Majors, ","))
mmdata %>% filter(Majors %in% bsMajors$Majors, str_detect(Majors, ",")) %>%
group_by(Majors, Degree) %>%
summarise(Count = n())%>% spread(key=Degree, value=Count)
str_flatten(sort(str_split(mmdata$Majors, ",", simplify=TRUE)))
str_flatten(sort(str_split(mmdata$Majors[29], ",", simplify=TRUE)))
?str_flatten
bsMajors <- mmdata %>%
mutate(Majors = str_remove_all(Majors, "[:space:]")) %>%
mutate(Majors = str_flatten(sort(str_split(Majors, ",", simplify = TRUE)), collapse = ",")) %>%
filter(Degree=="BS") %>% group_by(Majors) %>%
summarise(Count = n(), numYears.with.Graduate = n_distinct(Grad.Year))
View(bsMajors)
mmdata %>%
mutate(Majors = str_remove_all(Majors, "[:space:]"))
mmdata %>%
mutate(Majors = str_remove_all(Majors, "[:space:]")) %>%   mutate(Majors = str_flatten(sort(str_split(Majors, ",", simplify = TRUE)), collapse = ",")
)
sort(str_split(mmdata$Majors, ",", simplify = TRUE))
sort(str_split(mmdata$Majors[29], ",", simplify = TRUE))
?sort
?sort
unname(sapply(mmdata$Majors, function(x) {
paste(sort(trimws(strsplit(x[1], ',')[[1]])), collapse=',')} ))
unname(sapply(mmdata$Majors, function(x) {
paste(sort(trimws(strsplit(x, ',')[[1]])), collapse=',')} ))
unname(sapply(mmdata$Majors, function(x) {
x} ))
unname(sapply(mmdata$Majors, function(x) {
paste(sort(str_trim(str_split(x, ',', simplify = TRUE), side = "both")), collapse=',')} ))
20*240
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(stringr)
mmhc <- read.csv("~/gitlab/peak-nav/maj-min-cleaned-2013.csv")
library(chorddiag)
majMin <- select(mmhc, Major1, Major2, Major3, Minor1, Minor2, Minor3, Grad.Year) %>%
gather(key=MajNum, value = MAJOR, -c(Minor1,Minor2, Minor3, Grad.Year)) %>% select(-MajNum) %>%
gather(key=MinorNum, value=minor, -c(MAJOR, Grad.Year)) %>%
select(-MinorNum) %>%
mutate(MAJOR = str_trim(MAJOR, side="both"), minor = str_to_lower(str_trim(minor, side="both")))
majMin <- filter(majMin, !is.na(minor), minor!="", !is.na(MAJOR))
unique(majMin$MAJOR)
sort(unique(majMin$MAJOR))
sort(unique(majMin$minor))
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(stringr)
mmhc <- read.csv("~/gitlab/peak-nav/maj-min-cleaned-2013.csv")
View(mmhc)
mmhc %>% group_by(Grad.Year) %>% summarise(grads = n())
nsMin <- mmhc %>% filter(str_detect(Minor1, "NATSC") | str_detect(Minor2, "NATSC") | str_detect(Minor3, "NATSC")) %>% group_by(Grad.Year) %>% summarise(natsci_minors = n())
View(nsMin)
nsMin2 <- mmhc %>% filter(str_detect(Minor1, "NATSC") | str_detect(Minor2, "NATSC") | str_detect(Minor3, "NATSC"))
View(nsMin2)
136/236
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
sb <- read.csv("craters-cleaned.csv", header = TRUE)
#separate species
sb3 <- filter(sb, species=="3T")
sbwy <- filter(sb, species=="WY")
#zero varience lists
zv3 <- 5+which(sapply(6:52, function(x) var(sb3[,x]))==0)
zvwy <- 5+which(sapply(6:52, function(x) var(sbwy[,x]))==0)
which(sapply(6:52, function(x) var(sb[sb$species=="3T",x]))==0)
#3t with non-zero-var
sb3tnzv <- sb3[, -zv3]
pca3t <- prcomp(sb3tnzv[,-c(1:5)], scale.=TRUE, center=TRUE)
pcvarDF <- data.frame(PC=1:length(pca3t$sdev),
ve=pca3t$sdev^2/sum(pca3t$sdev^2),
cve=cumsum(pca3t$sdev^2)/sum(pca3t$sdev^2))
ggplot(pcvarDF, aes(x=PC, y=ve))+geom_point(size=2)+geom_line()+ylab("Proportion of Variance Explained")+ggtitle("3T Scree Plot")
ggplot(pcvarDF, aes(x=PC, y=cve))+geom_point(size=2)+geom_line()+ylab("Cumulative Variance Explained")+ggtitle("3T Cumulative Variance Explained")
devtools::install_github("thomasp85/patchwork")
library(patchwork)
propVar3.plt<- ggplot(pcvarDF, aes(x=PC, y=ve))+geom_point(size=2)+geom_line()+ylab("Proportion of Variance Explained")+ggtitle("3T Scree Plot")
cumvar3.plt<- ggplot(pcvarDF, aes(x=PC, y=cve))+geom_point(size=2)+geom_line()+ylab("Cumulative Variance Explained")+ggtitle("3T Cumulative Variance Explained")
propVar3.plt+cumvar3.plt
?sample
library(caret)
sb3pcClass <- select(sb3, id, species, browsed, PC1, PC2, PC3, PC4, PC5, PC6, PC7, PC8, PC9, PC10)
sb3 <- cbind.data.frame(sb3, pca3t$x)
sb3pcClass <- select(sb3, id, species, browsed, PC1, PC2, PC3, PC4, PC5, PC6, PC7, PC8, PC9, PC10)
trIdx <- sample(1:length(sb3pcClass$id), .7*length(sb3pcClass$id), replace=FALSE)
sb3pcTR <- sb3pcClass[trIdx,]
sb3pcTST <- sb3pcClass[-trIdx,]
View(sb3pcTR)
View(sb3pcTST)
set.seed(12345)
trIdx <- sample(1:length(sb3pcClass$id), .7*length(sb3pcClass$id), replace=FALSE)
sb3pcTR <- sb3pcClass[trIdx,]
sb3pcTST <- sb3pcClass[-trIdx,]
set.seed(982345)
trIdx <- sample(1:length(sb3pcClass$id), .7*length(sb3pcClass$id), replace=FALSE)
sb3pcTR <- sb3pcClass[trIdx,]
sb3pcTST <- sb3pcClass[-trIdx,]
set.seed(972345)
trIdx <- sample(1:length(sb3pcClass$id), .7*length(sb3pcClass$id), replace=FALSE)
sb3pcTR <- sb3pcClass[trIdx,]
sb3pcTST <- sb3pcClass[-trIdx,]
nb3 <- train(browsed~PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data=sb3pcTR, method="naive_bayes",
trControl=trainControl(method="cv", number=5))
nb3 <- train(browsed~PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data=sb3pcTR, method="naive_bayes",
trControl=trainControl(method="cv", number=5))
knn3 <- train(browsed~PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data=sb3pcTR, method="knn",
trControl=trainControl(method="cv", number=5))
rfs3 <- train(browsed~PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data=sb3pcTR, method="rf",
trControl=trainControl(method="cv", number=5))
rfs3 <- train(browsed~PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data=sb3pcTR, method="rf",
trControl=trainControl(method="cv", number=5))
rfp3 <- train(browsed~PC1*PC2*PC3*PC4*PC5*PC6*PC7*PC8*PC9*PC10,
data=sb3pcTR, method="rf",
trControl=trainControl(method="cv", number=5))
rfp3 <- train(browsed~PC1*PC2*PC3*PC4*PC5*PC6*PC7*PC8*PC9*PC10,
data=sb3pcTR, method="rf",
trControl=trainControl(method="cv", number=5))
plsda3 <- train(browsed~PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data=sb3pcTR, method="pls",
trControl=trainControl(method="cv", number=5),
tuneLength = 10, preProc = c("scale", "center"))
plsda3 <- train(browsed~PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data=sb3pcTR, method="pls",
trControl=trainControl(method="cv", number=5),
tuneLength = 10, preProc = c("scale", "center"))
svm3 <- train(browsed~PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10,
data=sb3pcTR, method="svmRadial",
trControl=trainControl(method="cv", number=5),
tuneLength = 10, preProc = c("scale", "center"))
confusionMatrix.train(nb3)
confusionMatrix.train(knn3)
confusionMatrix.train(rfs3)
confusionMatrix.train(rfp3)
confusionMatrix.train(svm3)
sb3pcTST$nb <- predict(nb3, sb3pcTST)
sb3pcTST$knn <- predict(knn3, sb3pcTST)
sb3pcTST$rfs <- predict(rfs3, sb3pcTST)
sb3pcTST$rfp <- predict(rfp3, sb3pcTST)
sb3pcTST$svm <- predict(svm3, sb3pcTST)
xtabs(~browsed+nb, sb3pcTST)
xtabs(~browsed+knn, sb3pcTST)
xtabs(~browsed+rfs, sb3pcTST)
xtabs(~browsed+rfp, sb3pcTST)
xtabs(~browsed+svm, sb3pcTST)
nb3$finalModel$prior
nb3$finalModel$obsLevels
nb3$finalModel$levels
nb3$finalModel$tables
library(freqparcoord)
data(mlb)
View(mlb)
names(mlb)
ggplot(mlb, aes(x=Height, y=Weight, size=Age))+geom_point()+geom_smooth(method="lm")
ggplot(mlb, aes(x=Height, y=Weight, size=Age))+geom_point(alpha=.1)+geom_smooth(method="lm", formula = y~x+size)
install.packages("ggridge")
install.packages("ggridges")
View(sb)
names(sb)
gather(sb, key=SB, value=Area, -c(id,species,browsed, CYP1A.grouse.micr, CYP1A.human.micr)) %>%
ggplot(aes(x=Area, y=SB))+geom_density_ridges()
library(ggridges)
gather(sb, key=SB, value=Area, -c(id,species,browsed, CYP1A.grouse.micr, CYP1A.human.micr)) %>%
ggplot(aes(x=Area, y=SB))+geom_density_ridges()
gather(sb, key=SB, value=Area, -c(id,species,browsed, CYP1A.grouse.micr, CYP1A.human.micr)) %>%
ggplot(aes(x=Area, y=SB))+geom_density_ridges()+facet_wrap(~species)
gather(sb, key=SB, value=Area, -c(id,species,browsed, CYP1A.grouse.micr, CYP1A.human.micr)) %>%
ggplot(aes(x=Area, y=SB))+geom_density_ridges()+facet_wrap(~species+browsed)
gather(sb, key=SB, value=Area, -c(id,species,browsed, CYP1A.grouse.micr, CYP1A.human.micr)) %>%
ggplot(aes(x=Area, y=SB))+geom_density_ridges()+facet_wrap(~species+browsed)
gather(sb, key=SB, value=Area, -c(id,species,browsed, CYP1A.grouse.micr, CYP1A.human.micr)) ->sbl
summary(sbl$Area)
sbl%>% group_by(species, browsed) %>% summary(summary(Area))
sbl%>% group_by(species, browsed) %>% summary(ma = mean(Area), sda = sd(Area))
sbl%>% group_by(species, browsed) %>% summarise(summary(Area))
sbl%>% group_by(species, browsed) %>% summarise(ma = mean(Area), sda = sd(Area))
sbl%>% group_by(species, browsed) %>% summarise(ma = mean(Area), sda = sd(Area), max=max(Area), q1=quantile(Area, .25), med=median(Area), q3=quantile(Area, .75))
filter(sbl, species=="3T") %>% ggplot(aes(x=Area, y=SB))+geom_density_ridges()+facet_wrap(~browsed)
filter(sbl, species=="WY") %>% ggplot(aes(x=Area, y=SB))+geom_density_ridges()+facet_wrap(~browsed)
ggplot(sbl[sbl$species=="3T" & !(sbl$SB %in% c("SB01", "SB04", "SB07", "SB23", "SB25", "SB31", "SB33")),], aes(x=Area, y=SB))+geom_density_ridges()+facet_wrap(~browsed)+ggtitle("SB Area distribution for 3T")
ggplot(sbl[sbl$species=="3T" & !(sbl$SB %in% c("SB01", "SB04", "SB07", "SB23", "SB25", "SB31", "SB33")),], aes(x=Area, y=SB))+geom_density_ridges()+facet_wrap(~browsed)+ggtitle("SB Area distribution for 3T")
ggplot(sbl[sbl$species=="3T" & !(sbl$SB %in% c("SB01", "SB04", "SB07", "SB23", "SB25", "SB31", "SB33")),], aes(x=Area, y=SB, fill=var(Area)))+geom_density_ridges()+facet_wrap(~browsed)+ggtitle("SB Area distribution for 3T")
filter(sbl, species=="3T") %>% group_by(browsed, SB) %>% summarise(va = var(Area))
filter(sbl, species=="3T") %>% group_by(browsed, SB) %>% summarise(va = var(Area)) %>% View()
filter(sbl, species=="3T") %>% group_by(browsed, SB) %>% summarise(va = var(Area)) %>% filter(va==0)
filter(sbl, species=="3T") %>% group_by(browsed, SB) %>% summarise(va = var(Area)) %>% filter(va==0) -> sbzv3tb
ggplot(sbl[sbl$species=="3T" & (sbl$SB %in% sbzv3tb$SB),], aes(x=Area, y=SB, fill=var(Area)))+geom_density_ridges()+facet_wrap(~browsed)+ggtitle("SB Area distribution for 3T")
ggplot(sbl[sbl$species=="3T" & (sbl$SB %in% sbzv3tb$SB),], aes(x=Area, y=SB))+geom_density_ridges()+facet_wrap(~browsed)+ggtitle("SB Area distribution for 3T")
ggplot(sbl[sbl$species=="3T" & (sbl$SB %in% sbzv3tb$SB),], aes(x=Area, y=SB))+geom_density_ridges(    jittered_points = TRUE,
position = position_points_jitter(width = 0.05, height = 0),
point_shape = '|', point_size = 3, point_alpha = 1, alpha = 0.7
)+facet_wrap(~browsed)+ggtitle("SB Area distribution for 3T")
ggplot(sbl[sbl$species=="3T",], aes(x=Area, y=SB))+geom_density_ridges(    jittered_points = TRUE,
position = position_points_jitter(width = 0.05, height = 0),
point_shape = '|', point_size = 3, point_alpha = 1, alpha = 0.7
)+facet_wrap(~browsed)+ggtitle("SB Area distribution for 3T")
range(sbl$Area)
range(sbl$Area)[,1]
range(sbl$Area)[1]
group_by(sbl, browsed, SB) %>% summarise(ma = min(Area), max=max(Area), n=n(), nd=n_distinct(Area))
group_by(sbl, browsed, SB) %>% summarise(ma = min(Area), max=max(Area), n=n(), nd=n_distinct(Area)) %>% View()
group_by(sbl, species, browsed, SB) %>% summarise(ma = min(Area), max=max(Area), n=n(), nd=n_distinct(Area)) %>% View()
group_by(sbl, species, browsed, SB) %>% summarise(ma = min(Area), max=max(Area), n=n(), nd=n_distinct(Area), rpd = (max-ma)/nd) %>% View()
group_by(sbl, species, browsed, SB) %>% summarise(ma = min(Area), max=max(Area), n=n(), nd=n_distinct(Area), rpd = (max-ma)/nd) -> sbVarGrp
ggplot(sbVarGrp, aes(x=rpd))+geom_histogram()
arrange(sbVarGrp, rpd)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
sb <- read.csv("craters-cleaned.csv", header = TRUE)
#separate species
sb3 <- filter(sb, species=="3T")
sbwy <- filter(sb, species=="WY")
#zero varience lists
zv3 <- 5+which(sapply(6:52, function(x) var(sb3[,x]))==0)
zvwy <- 5+which(sapply(6:52, function(x) var(sbwy[,x]))==0)
ggplot()+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="B"), aes(x=Area, y=SB),fill="red",    jittered_points = TRUE,
position = position_points_jitter(width = 0.05, height = 0),
point_shape = '|', point_size = 3, point_alpha = 1, alpha = 0.4
)+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="NB"), aes(x=Area, y=SB),fill="blue",    jittered_points = TRUE,
position = position_points_jitter(width = 0.05, height = 0),
point_shape = '|', point_size = 3, point_alpha = 1, alpha = 0.4
)facet_wrap(~browsed)+ggtitle("SB Area distribution for WY")
ggplot()+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="B"), aes(x=Area, y=SB),fill="red", alpha = 0.4
)+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="NB"), aes(x=Area, y=SB),fill="blue", alpha = 0.4
)+ggtitle("SB Area distribution for WY")
library(ggridges)
ggplot()+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="B"), aes(x=Area, y=SB),fill="red", alpha = 0.4
)+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="NB"), aes(x=Area, y=SB),fill="blue", alpha = 0.4
)+ggtitle("SB Area distribution for WY")
sbl <- gather(sb, key=SB, value=Area, -c(id,species,browsed, CYP1A.grouse.micr, CYP1A.human.micr))
ggplot()+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="B"), aes(x=Area, y=SB),fill="red", alpha = 0.4
)+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="NB"), aes(x=Area, y=SB),fill="blue", alpha = 0.4
)+ggtitle("SB Area distribution for WY")
)+ggtitle("SB Area distribution for WY")
ggplot()+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="B"), aes(x=Area, y=SB),fill="red", alpha = 0.4
)+geom_density_ridges(data=filter(sbl, species=="WY",browsed=="NB"), aes(x=Area, y=SB),fill="blue", alpha = 0.4
)+ggtitle("SB Area distribution for WY")
install.packages("later")
install.packages("later")
install.packages("later")
devtools::install_github("r-lib/later")
library(later)
blogdown::serve_site()
setwd("~/github-web/jpreszler/")
blogdown::serve_site()
setwd("~/github-web/jpreszler/")
blogdown::stop_server()
setwd("~/github-web/jpreszler/")
blogdown::serve_site()
