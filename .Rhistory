knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("Downloads/USACSCORES.csv", header=TRUE)
dfl <- gather(df, key="Test", value="Score", -Track.Level)
dflgrp <- dfl %>% group_by(Track.Level, Test) %>%
summarise(n=n(), mean=mean(Score), low=mean-1.96*sd(Score)/n, high=mean+1.96*sd(Score)/n)
ggplot(dflgrp)+
geom_point(mapping=aes(x=Test, y=mean, col=Track.Level))+
geom_line(mapping=aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.5)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.5)
df <- read.csv("Downloads/USACSCORES.csv", header=TRUE)
dfl <- gather(df, key="Test", value="Score", -Track.Level)
dfl$Test <- factor(df$Test, levels = c("Pre","Post"))
dfl$Test <- factor(dfl$Test, levels = c("Pre","Post"))
dflgrp <- dfl %>% group_by(Track.Level, Test) %>%
summarise(n=n(), mean=mean(Score), low=mean-1.96*sd(Score)/n, high=mean+1.96*sd(Score)/n)
ggplot(dflgrp)+
geom_point(mapping=aes(x=Test, y=mean, col=Track.Level))+
geom_line(mapping=aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.5)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.5)
ggplot(dflgrp, aes(col=Track.Level))+
geom_point(mapping=aes(x=Test, y=mean, col=Track.Level), size=2)+
geom_line(mapping=aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+ylab("Score")+ggtitle("Means and 95% ConFidence Levels by Track Level, from Pre- to Post-Test")
ggplot(dflgrp, aes(col=Track.Level))+
geom_point(mapping=aes(x=Test, y=mean, col=Track.Level), size=1)+
geom_line(mapping=aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+ylab("Score")+ggtitle("Means and 95% ConFidence Levels <br>by Track Level, from Pre- to Post-Test")
ggplot(dflgrp, aes(col=Track.Level))+
geom_point(mapping=aes(x=Test, y=mean, col=Track.Level), size=1)+
geom_line(mapping=aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+ylab("Score")+ggtitle("Slope-Graph of Performance by Track Level")+scale_fill_discrete(name="Track Level", breaks=c("A","B","C","D"))
ggplot(dflgrp, aes(col=Track.Level))+
geom_point(mapping=aes(x=Test, y=mean, col=Track.Level), size=1)+
geom_line(mapping=aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+ylab("Score")+ggtitle("Slope-Graph of Performance by Track Level")+scale_color_discrete(name="Track Level", breaks=c("A","B","C","D"))
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=1)+
geom_line()+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+ylab("Score")+ggtitle("Slope-Graph of Performance by Track Level")+scale_color_discrete(name="Track Level", breaks=c("A","B","C","D"))
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=1)+
geom_line()+
ylab("Score")+ggtitle("Slope-Graph of Performance by Track Level")+scale_color_discrete(name="Track Level", breaks=c("A","B","C","D"))
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=1)+
geom_line()+
ylab("Score")+ggtitle("Slope-Graph of Performance by Track Level")+scale_color_discrete(name="Track Level", breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=1)+
geom_line()+
ylab("Score")+ggtitle("Slope-Graph of Performance by Track Level")+scale_color_discrete(name="Track Level", breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=1)+
geom_line()+
ylab("Score")+ggtitle("Slope-Graph of Performance by Track Level")+scale_color_discrete(name="Track Level", breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, col=Track.Level), alpha=0.8)
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=1)+
geom_line()+
ylab("Score")+ggtitle("Slope-Graph of Performance by Track Level")+scale_color_discrete(name="Track Level", breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, fill=Track.Level), alpha=0.8)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, fill=Track.Level), alpha=0.8)
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=1)+
geom_line()+
ylab("Score")+ggtitle("Slope-Graph of Performance by Track Level")+scale_color_discrete(name="Track Level", breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",], mapping=aes(x=Test, ymin=low, ymax=high, fill=Track.Level), alpha=0.8, show.legend = FALSE)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",], mapping=aes(x=Test, ymin=low, ymax=high, fill=Track.Level), alpha=0.8, show.legend = FALSE)
#draw scatter plot with regression lines
ggplot(df, aes(x=Pre, y=Post, col=Track.Level))+
geom_point()+
geom_smooth(method="lm", formula = Post~Pre+Track)
#draw scatter plot with regression lines
ggplot(df, aes(x=Pre, y=Post, col=Track.Level))+
geom_point()+
geom_smooth(method="lm")
#draw scatter plot with regression lines
ggplot(df, aes(x=Pre, y=Post, col=Track.Level))+
geom_point()+
geom_smooth(method="lm", formula = y~x)
lm(Post~Pre+Track.Level, data=df)
lm(Post~Pre*Track.Level, data=df)
#draw scatter plot with regression lines
ggplot(df, aes(x=Pre, y=Post, col=Track.Level))+
geom_point()+
geom_smooth(method="lm", se=FALSE)
pp<-lm(Post~Pre, data=df)
ggplot(pp, aes(x=.fitted, y=.resid))+geom_point()
pp
summary(pp)
sqrt(mean(pp$residuals^2))
pp2<-lm(Post~Pre*Track.Level, data=df)
sqrt(mean(pp2$residuals^2))
ggplot(pp2, aes(x=.fitted, y=.resid))+geom_point()
summary(pp2)
#draw slope-graph
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=1)+
geom_line()+
ylab("Score")+
ggtitle("Slope-Graph of Performance by Track Level")+
scale_color_discrete(name="Track Level",
breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level), alpha=0.8,
show.legend = FALSE)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level), alpha=0.8,
show.legend = FALSE)
#draw slope-graph
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=1)+
geom_line()+
ylab("Score")+
ggtitle("Slope-Graph of Performance by Track Level")+
scale_color_discrete(name="Track Level",
breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level), size=3,
show.legend = FALSE)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level), size=3,
show.legend = FALSE)
#draw slope-graph
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=3)+
geom_line()+
ylab("Score")+
ggtitle("Slope-Graph of Performance by Track Level")+
scale_color_discrete(name="Track Level",
breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level), size=2,
show.legend = FALSE)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level), size=2,
show.legend = FALSE)
#draw slope-graph
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=2)+
geom_line()+
ylab("Score")+
ggtitle("Slope-Graph of Performance by Track Level")+
scale_color_discrete(name="Track Level",
breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level), size=1.5,
show.legend = FALSE)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level), size=1.5,
show.legend = FALSE)
#draw slope-graph
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=2)+
geom_line()+
ylab("Score")+
ggtitle("Slope-Graph of Performance by Track Level")+
scale_color_discrete(name="Track Level",
breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level),
size=1.5, alpha=.4,
show.legend = FALSE)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level),
size=1.5, alpha=.4,
show.legend = FALSE)
#draw slope-graph
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=2)+
geom_line()+
ylab("Score")+
ggtitle("Slope-Graph of Performance by Track Level")+
scale_color_discrete(name="Track Level",
breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level),
size=1.5, alpha=.2,
show.legend = FALSE)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level),
size=1.5, alpha=.2,
show.legend = FALSE)
#draw slope-graph
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=2)+
geom_line()+
ylab("Score")+
ggtitle("Slope-Graph of Performance by Track Level")+
scale_color_discrete(name="Track Level",
breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level),
size=1.5, alpha=.1,
show.legend = FALSE)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level),
size=1.5, alpha=.1,
show.legend = FALSE)
#draw slope-graph
ggplot(dflgrp, aes(x=Test, y=mean, col=Track.Level, group=Track.Level))+
geom_point( size=2)+
geom_line()+
ylab("Score")+
ggtitle("Slope-Graph of Performance by Track Level")+
scale_color_discrete(name="Track Level",
breaks=c("A","B","C","D"))+
geom_ribbon(data=dflgrp[dflgrp$Test=="Pre",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level),
size=1.5,
show.legend = FALSE)+
geom_ribbon(data=dflgrp[dflgrp$Test=="Post",],
mapping=aes(x=Test, ymin=low, ymax=high,
fill=Track.Level),
size=1.5,
show.legend = FALSE)
library(dplyr)
install.packages(c("assertthat", "backports", "broom", "caret", "clipr", "data.table", "ggplot2", "gtable", "httpuv", "openssl", "reticulate", "rlang", "rvest", "shiny", "tinytex", "xfun"))
install.packages('stringi')
install.packages("caret")
setwd('/home/jpreszler/github/jpreszler')
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message=FALSE, error = FALSE)
library(dplyr)
library(ggplot2)
library(stringr)
library(tidyr)
library(DT)
library(networkD3)
students <- read.csv("../../static/files/math-major-anon.csv", header=TRUE)
students$crs <- str_replace(students$crs, "MAT-28[:digit:]{1}", "MAT-28X")
nodes <- group_by(students, crs, std.year) %>%
summarise(cnt = n()) %>% ungroup() %>%
select(name=crs, std.year) %>%
unite(id, name, std.year, sep="_", remove=FALSE)
#build source data
s.crs <- select(students, s.name=crs, s.std.year=std.year, id)
s.crs <- s.crs[!duplicated(s.crs),]
#build target data
t.crs <- select(students, t.name=crs, t.std.year=std.year, id)
t.crs <- t.crs[!duplicated(t.crs),]
#join and remove self-loops and backward edges
edgePerStudent <- full_join(s.crs, t.crs) %>%
filter(s.name!=t.name, s.std.year<t.std.year) %>%
arrange(id, s.std.year, t.std.year)
#build edges
edgeDF <- edgePerStudent[1,] #got to start somewhere
for(i in 2:nrow(edgePerStudent)){
if(edgeDF[nrow(edgeDF),]$id != edgePerStudent[i,]$id){
#different id's count
edgeDF <- rbind.data.frame(edgeDF, edgePerStudent[i,])
}
else if(edgeDF[nrow(edgeDF),]$s.std.year == edgePerStudent[i,]$s.std.year & edgeDF[nrow(edgeDF),]$t.std.year == edgePerStudent[i,]$t.std.year){
#same source and target as counting counts
edgeDF <- rbind.data.frame(edgeDF, edgePerStudent[i,])
}
else if(edgeDF[nrow(edgeDF),]$t.std.year == edgePerStudent[i,]$s.std.year){
#if last counted target is current source, it counts
edgeDF <- rbind.data.frame(edgeDF, edgePerStudent[i,])
}
}
#now count edge weights
edgeDF <- group_by(edgeDF, s.name, s.std.year, t.name,t.std.year) %>%
summarise(value=n_distinct(id))
edgeDF <- unite(edgeDF, s.id, s.name,s.std.year, sep="_", remove=FALSE) %>%
unite(t.id, t.name,t.std.year, sep="_", remove = FALSE)
nodes$node.id <- 1:nrow(nodes)
edgeDF <- inner_join(edgeDF, nodes, by=c("s.id"="id"))
edgeDF <- select(edgeDF, -s.id, source=node.id)
edgeDF <- inner_join(edgeDF, nodes, by=c("t.id"="id"))
edgeDF <- select(edgeDF, -t.id, target=node.id)
#switch to zero indexing for javascript
edgeDFTemp <- mutate(edgeDF, source=source-1, target = target-1)
nodeDFTemp <- mutate(nodes, nid = node.id-1, id =
ifelse(str_detect(id, "\\.6"),
str_replace(id, "\\.6","SU"),
ifelse(str_detect(id, "\\.4"),
str_replace(id, "\\.4", "SP"),
ifelse(str_detect(id, "\\.2"),
str_replace(id, "\\.2", "W"),
str_c(id, "FA")))))
sankeyNetwork(Links = edgeDFTemp, Nodes = nodeDFTemp, Source = "source",
Target = "target", Value = "value", NodeID = "id",
nodeWidth = 20, fontSize = 8, units = "students")
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
install.packages(c("blogdown", "bookdown", "callr", "curl", "devtools", "digest", "dplyr", "DT", "evaluate", "ggplot2", "git2r", "knitr", "markdown", "mime", "openssl", "pillar", "processx", "remotes", "rlang", "rmarkdown", "servr", "tibble", "tinytex", "usethis", "xfun"))
blogdown::serve_site()
iinstall.packages('xfun')
install.packages('xfun')
install.packages("xfun")
blogdown::serve_site()
blogdown::serve_site()
