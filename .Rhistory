summary(aq3)
ggplot(aq3, aes(x=.fitted, y=.resid))+geom_point()
anova(aq1, aq2)
anova(aq2, aq3)
library(dplyr)
library(ggplot2)
library(tidyr)
library(broom)
library(patchwork)
data(airquality)
tidy(aq1,aq2)
tidy(aq1)
library(carData)
data("States")
head(States)
data(Wong)
head(Wong)
?Wong
data("longley")
head(longley)
install.packages("Ecdat")
library(Ecdat)
?Mishkin
?Males
install.packages("ISLR")
library(ISLR)
?OJ
?Credit
sleepstudy <- read.csv("~/Downloads/sleepstudy.csv")
View(sleepstudy)
ggplot(sleepstudy, aes(x=Days, y=Reaction))+geom_point()
ss <- lm(Reaction~Days, data=sleepstudy)
summary(ss)
ggplot(ss, aes(x=.fitted, y=.resid))+geom_point()
length(unique(sleepstudy$Subject))
sleepstudy %>% group_by(Subject) %>% summarise(mean = mean(Reaction), sd= sd(Reaction))
kiq <- read.dta("~/Downloads/kidiq.dta")
install.packages("foreign")
library(foreign)
kiq <- read.dta("~/Downloads/kidiq.dta")
View(kiq)
k1 <- lm(kid_score~mom_iq, data=kiq)
k2 <- lm(kid_score~mom_iq+mom_hs, data=kiq)
ggplot(k1, aes(x=.fitted, y=.resid))+geom_point()
ggplot(k2, aes(x=.fitted, y=.resid))+geom_point()
summary(k1)
summary(k2)
data("airquality")
aq0 <- lm(Ozone~Temp, data=airquality)
summary(aq0)
ggplot(aq0, aes(x=.fitted, y=.resid))+geom_point()
aq0 <- lm(Ozone~Wind, data=airquality)
ggplot(aq0, aes(x=.fitted, y=.resid))+geom_point()
summary(aq0)
aq0 <- lm(Ozone~Solar.R, data=airquality)
summary(aq0)
ggplot(aq0, aes(x=.fitted, y=.resid))+geom_point()
aq0 <- lm(Ozone~Temp, data=airquality)
aq1 <- lm(Ozone~Temp*Wind, data=airquality)
summary(aq1)
summary(aq0)
ggplot(aq0, aes(x=.fitted, y=.resid))+geom_point()
ggplot(aq1, aes(x=.fitted, y=.resid))+geom_point()
aq1$residuals
View(airquality)
data(airquality)
airqual <- airquality[-117,] %>% dplyr::select(-c("Month", "Day")) %>% filter(!is.na(Ozone))
aq1<-lm(Ozone~Temp, data=airqual)
aq2<-lm(Ozone~Solar.R+Temp+Wind+Temp:Wind, data=airqual)
summary(aq1)
summary(aq2)
aq1$residuals
aq3<-lm(Ozone~Solar.R+Temp+Wind+Temp:Wind+Temp:Solar.R, data=airqual)
aq2$residuals
summary(aq3)
anova(aq2,aq3)
ggplot(aq3, aes(x=.fitted, y=.resid))+geom_point()
aq3$residuals
?airquality
.13/sqrt(40)
26*.7
8.5*.7
nm <- read.csv("~/nsm-majors.csv", header=TRUE)
mean(nm$Max.Credits)
mean(nm$Min.Credits)
library(ggplot2)
library(plotly)
library(stringr)
filter(nm, str_count(PEAK, ";")>2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits))+geom_point(position="jitter")
library(tidyr)
filter(nm, str_count(PEAK, ";")>2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits))+geom_point(position="jitter")
filter(nm, str_count(PEAK, ";")>2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% head()
filter(nm, str_count(PEAK,";")>2)
head(nm)
str_count(nm$PEAK)
str_count(nm$PEAK,";")
filter(nm, str_count(nm$PEAK, ";")>2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits))+geom_point(position="jitter")
filter(nm, str_count(nm$PEAK,";")>2)
filter(nm, str_count(nm$PEAK,";")<2)
filter(nm, str_count(nm$PEAK, ";")<2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits))+geom_point(position="jitter")
filter(nm, str_count(nm$PEAK, ";")<2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits, col=Range))+geom_point(position="dodge")
filter(nm, str_count(nm$PEAK, ";")<2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits, col=Range))+geom_point()+geom_path()
filter(nm, str_count(nm$PEAK, ";")<2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits, col=Range))+geom_point()+geom_path(aes(group=Name))
filter(nm, str_count(nm$PEAK, ";")<2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits, col=Range))+geom_point()+geom_path(aes(group=Name), col="black")
filter(nm, str_count(nm$PEAK, ";")<2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits, col=Range))+geom_point()+geom_path(aes(group=Name), col="black") %>% ggplotly()
filter(nm, str_count(nm$PEAK, ";")<2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits, col=Range))+geom_point()+geom_path(aes(group=Name), col="black") -> p
ggplotly(p)
filter(nm, str_count(nm$PEAK, ";")<2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits, col=Name))+geom_point()+geom_path(aes(group=Name)) -> p
ggplotly(p)
filter(nm, str_count(nm$PEAK, ";")<2) %>% gather(key=Range, value=Credits, -c(Name, Capstone, PEAK) )%>% ggplot(aes(x=Range, y=Credits, col=Name, group=Name))+geom_point()+geom_path() -> p
ggplotly(p)
library(rvest)
library(stringr)
library(dplyr)
library(purrr)
library(tidyr)
#url for courses in catalog
base_url <- "http://collegeofidaho.smartcatalogiq.com"
base_url_ext <- "/en/current/Undergraduate-Catalog/PEAK-Majors/"
base_html <- read_html(paste0(base_url,base_url_ext))
#extract links from base page
minorLinks <- html_nodes(base_html, 'a')
#convert links to text
minorText <- html_text(subjectLinks)
#convert links to text
minorText <- html_text(minorLinks)
minorText
major_url <- html_attr(majorLinks, 'href')[35:69]
#pick out what corresponds to subject list
#we now have subject codes and names
majorText <- majorText[35:69]
majorDF <- data.frame(Major = majorText)
#get url for subject, for each row in subDF
#subDF <-subDF %>% mutate(url= paste0(base_url,base_url_ext,'/',sub,'-',str_replace_all(subject,' ','-')))
majorDF <- mutate(majorDF, url=paste0(base_url,major_url))
#pick out what corresponds to subject list
#we now have subject codes and names
majorText <- majorText[35:69]
#extract links from base page
majorLinks <- html_nodes(base_html, 'a')
#convert links to text
majorText <- html_text(majorLinks)
major_url <- html_attr(majorLinks, 'href')[35:69]
#pick out what corresponds to subject list
#we now have subject codes and names
majorText <- majorText[35:69]
majorDF <- data.frame(Major = majorText)
#get url for subject, for each row in subDF
#subDF <-subDF %>% mutate(url= paste0(base_url,base_url_ext,'/',sub,'-',str_replace_all(subject,' ','-')))
majorDF <- mutate(majorDF, url=paste0(base_url,major_url))
get_class_list <- function(i){
# if(i==12){
#  return(data.frame(Minor=minorDF$Minor[i], sub = "", num = "", url=""))
#}
#get list of links on subject page
class_links <- html_nodes(read_html(majorDF$url[i]), 'a')
#turn links to text
class_list <- html_text(class_links)
class_url <- html_attr(class_links, 'href')
classDF <- data.frame(Minor = rep(majorDF$Major[i], length(class_list)), list=class_list, url=class_url)
#only keep links for classes, each subject has
#classes starting in a different position
classDF <- classDF %>% filter(str_detect(list, "[:upper:]{2,}-[:digit:]+"))
#two theater classes have typos -THE-###
#this is solely dealing with that
classDF$list <- str_replace(classDF$list, "-THE", "THE")
#back to normal
classDF <- separate(classDF, list, into=c("sub", "number"), sep="-")
#the id field has the last part of the new url, we need the
#subject url with the course level (100,200,etc) then id
classDF <- mutate(classDF,url=paste0(base_url,url))
#for test/debug
#print(i)
return(classDF)
}
classes <- map_dfr(1:length(majorDF$Major), get_class_list)
View(classes)
get_class_list <- function(i){
# if(i==12){
#  return(data.frame(Minor=minorDF$Minor[i], sub = "", num = "", url=""))
#}
#get list of links on subject page
class_links <- html_nodes(read_html(majorDF$url[i]), 'a')
#turn links to text
class_list <- html_text(class_links)
class_url <- html_attr(class_links, 'href')
classDF <- data.frame(Major = rep(majorDF$Major[i], length(class_list)), list=class_list, url=class_url)
#only keep links for classes, each subject has
#classes starting in a different position
classDF <- classDF %>% filter(str_detect(list, "[:upper:]{2,}-[:digit:]+"))
#two theater classes have typos -THE-###
#this is solely dealing with that
classDF$list <- str_replace(classDF$list, "-THE", "THE")
#back to normal
classDF <- separate(classDF, list, into=c("sub", "number"), sep="-")
#the id field has the last part of the new url, we need the
#subject url with the course level (100,200,etc) then id
classDF <- mutate(classDF,url=paste0(base_url,url))
#for test/debug
#print(i)
return(classDF)
}
classes <- map_dfr(1:length(majorDF$Major), get_class_list)
classes2 <- classes[!duplicated(classes),]
View(classes2)
shiny::runApp('github-web/CofI-Shiny/Course_Time')
forestfires <- read.csv("~/Downloads/forestfires.csv")
View(forestfires)
ff1 <- lm(area~temp+RH+wind+rain, data=forestfires)
summary(ff1)
ggplot(ff1, aes(x=.fitted, y=.resid))+geom_point()
library(ggplot2)
ggplot(ff1, aes(x=.fitted, y=.resid))+geom_point()
boxplot(forestfires$area)
summary(forestfires$area)
library(dplyr)
ffc <- forestfires %>% select(month, day, temp, RH, wind, rain, area) %>% filter(area < 200)
boxplot(ffc$area)
summary(ffc$area)
ffc$la <- log(ffc$area)
boxplot(ffc$la)
View(ffc)
ffc <- forestfires %>% select(month, day, temp, RH, wind, rain, area) %>% filter(area < 100, area>0)
summary(ffc$area)
library(GGally)
ggpairs(ffc)
summary(ffc$month)
ffc <- forestfires %>% select(month, day, temp, RH, wind, rain, area) %>% filter(area < 100, area>0, month=="aug" | month=="sep")
library(lme4)
MASS::DDT
write.csv(ffc, file="forest-fires2.csv", row.names = FALSE)
write.csv(ffc, file="~/Downloads/forest-fires2.csv", row.names = FALSE)
library(ggplot2)
data("swiss")
names(swiss)
data("diamonds")
names(diamonds)
summary(lm(price~carat+color+cut+clarity, data=diamonds))
summary(lm(price~carat+color+cut, data=diamonds))
summary(lm(price~carat+cut, data=diamonds))
summary(lm(price~carat, data=diamonds))
names(diamonds)
View(diamonds)
summary(lm(price~depth+table, data=diamonds))
titanic <- read.csv("~/Downloads/titanic.csv")
View(titanic)
train <- read.csv("~/Downloads/train.csv")
View(train)
trIdx <- sample(1:length(train$PassengerId), .8*length(train$PassengerId), replace=FALSE)
titanic <- train[trIdx,]
library(dplyr)
?Titanic
titanic <- titanic %>% select(-Name)
View(titanic)
titanicTST <- train[-trIdx,] %>% select(-Name)
write.csv(titanic, file="~/gitlab/m212/titanic-train.csv", row.names = FALSE)
write.csv(select(titanicTST, -Survived), file="~/gitlab/m212/titanic-test.csv", row.names = FALSE)
write.csv(titanicTST, file="~/gitlab/m212/titanic-test-real.csv", row.names = FALSE)
titanic.glm <- glm(Survived ~ Pclass+Sex+Age+Fare, data=titanic, family=binomial())
?predict
predict(titanic.glm)
predict(titanic.glm, type = "prob")
predict(titanic.glm, type = "link")
predict(titanic.glm, type = "response")
titanic$predict <- predict(titanic.glm, type = "response")
titanic$predict <- predict(titanic.glm, titanic[,-2],type = "response")
View(titanic)
length(is.na(titanic$predict))
sum(is.na(titanic$predict))
712-141
library(caret)
shiny::runApp('github-web/CofI-Shiny/TitanicTest')
runApp('github-web/CofI-Shiny/TitanicTest')
runApp('github-web/CofI-Shiny/TitanicTest')
runApp('github-web/CofI-Shiny/TitanicTest')
runApp('github-web/CofI-Shiny/TitanicTest')
runApp('github-web/CofI-Shiny/TitanicTest')
runApp('github-web/CofI-Shiny/TitanicTest')
runApp('github-web/CofI-Shiny/TitanicTest')
1600-1573.23
26.77+378.82
A.pyClust <- read.csv("~/gitlab/math-placement/data/A-pyClust.csv")
View(A.pyClust)
A.pyClust$gml <- ifelse(A.pyClust$gml==0, 1, 0)
A.pyClust$acl <- ifelse(A.pyClust$acl==0, 1, 0)
library(ggplot2)
ggplot(A.pyClust, aes(x=score, y=subscore, col=Crs, size=(kml+scl+acl+gml)))+geom_point()
ggplot(A.pyClust, aes(x=score, y=subscore, col=as.factor(Crs), size=(kml+scl+acl+gml)))+geom_point()
ggplot(A.pyClust, aes(x=score, y=subscore, col=as.factor(Crs), shape=as.factor(kml+scl+acl+gml), alpha=FinalAve))+geom_point()
ggplot(A.pyClust, aes(x=score, y=subscore, col=as.factor(Crs), shape=as.factor(kml+scl+acl+gml), size=FinalAve))+geom_point()
library(dplyr)
A.pyClust %>% filter(subscore>.5, Crs==101)
A.pyClust %>% filter(subscore>.5, Crs==101) %>% select(LastName) -> m101gLN
A.pyClust %>% filter(LastName %in% m101gLN)
m101gLN
A.pyClust %>% filter(LastName %in% m101gLN$LastName)
library(caret)
mp.rf <- train(Course~ score+subscore+kml+scl+acl+gml+X1+X2+X3+X4+X5+X6+X7+X8+X9+X10+X11+X12+X13+X14+X15+X16, method="rf", trControl = trainControl(method="cv", number=7))
mp.rf <- train(Course~ score+subscore+kml+scl+acl+gml+X1+X2+X3+X4+X5+X6+X7+X8+X9+X10+X11+X12+X13+X14+X15+X16, data=A.pyClust,method="rf", trControl = trainControl(method="cv", number=7))
varImp(mp.rf)
mp.rf$bestTune
mp.rf$finalModel$err.rate
mp.rf$finalModel$confusion
varImp(mp.rf)
mp.rf <- train(Course~ score+subscore+kml+scl+acl+gml, data=A.pyClust,method="rf", trControl = trainControl(method="cv", number=7))
varImp(mp.rf)
library(GGally)
ggpairs(A.pyClust[,c(7,36:41)])
mp.rf$finalModel$importanceSD
mp.rf$finalModel$importance
mp.rf <- train(Course~ score+kml+scl+acl+gml+X1+X2+X3+X4+X5+X6+X7+X8+X9+X10+X11+X12+X13+X14+X15+X16, data=A.pyClust,method="rf", trControl = trainControl(method="cv", number=7))
varImp(mp.rf)
mp.rf <- train(Course~ kml+scl+acl+gml+X1+X2+X3+X4+X5+X6+X7+X8+X9+X10+X11+X12+X13+X14+X15+X16, data=A.pyClust,method="rf", trControl = trainControl(method="cv", number=7))
varImp(mp.rf)
mp.rf <- train(Course~ kml+scl+gml+X1+X2+X3+X4+X5+X6+X7+X8+X9+X10+X11+X12+X13+X14+X15+X16, data=A.pyClust,method="rf", trControl = trainControl(method="cv", number=7))
varImp(mp.rf)
mp.rf <- train(Course~ kml+scl+gml+X3+X4+X5+X6+X7+X8+X9+X10+X11+X12+X13+X14+X15+X16, data=A.pyClust,method="rf", trControl = trainControl(method="cv", number=7))
varImp(mp.rf)
library(readr)
frisk_with_noise <- read_table2("gitlab/m212/frisk_with_noise.dat",
skip = 6)
View(frisk_with_noise)
frisk <- frisk_with_noise %>% filter(past.arrests > 0)
library(dplyr)
frisk <- frisk_with_noise %>% filter(past.arrests > 0)
frisk$eth <- ifelse(frisk$eth==1, "black", ifelse(frisk$eth==2,"hispanic", "white"))
stop2 <- glm(stops~eth, data=frisk, family=poisson, offset=log(past.arrests))
summary(stop2)
stop2$residuals
stop2$effects
stop2$deviance
residuals(stop2, type = "pearson")
View(frisk)
s2resid <- data.frame(eth=frisk$eth, stops = frisk$stops, dev.resid = residuals(stop2, type="deviance"), pearson.resid = residuals(stop2, type="pearson", std.resid = residuals(stop2, type="response"), predicted = predict(stop2, frisk[,-1])))
View(s2resid)
s2resid <- data.frame(eth=frisk$eth, stops = frisk$stops, dev.resid = residuals(stop2, type="deviance"), pearson.resid = residuals(stop2, type="pearson"), std.resid = residuals(stop2, type="response"), predicted = predict(stop2, frisk[,-1]))
s2resid <- data.frame(eth=frisk$eth, stops = frisk$stops, dev.resid = residuals(stop2, type="deviance"), pearson.resid = residuals(stop2, type="pearson"), std.resid = residuals(stop2, type="response"), predicted = predict(stop2, frisk[,-1], type="response"))
library(tidyr)
library(ggplot2)
gather(s2resid, key="resid.type", value="residual", -c(eth, stops, predicted)) %>% ggplot(aes(x=stops, y=residual, col=eth))+geom_point()+facet_wrap(~resid.type)
gather(s2resid, key="resid.type", value="residual", -c(eth, stops, predicted)) %>% ggplot(aes(x=stops, y=residual, col=eth))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
ggplot(stop2, aes(x=.fitted, y=.resid))+geom_point()
ggplot(stop2, aes(x=exp(.fitted), y=.resid))+geom_point()
ggplot(stop2, aes(x=exp(.fitted), y=exp(.resid)))+geom_point()
gather(s2resid, key="resid.type", value="residual", -c(eth, stops, predicted)) %>% ggplot(aes(x=fitted(stop2), y=residual, col=eth))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
gather(s2resid, key="resid.type", value="residual", -c(eth, stops, predicted)) %>% ggplot(aes(x=fitted(stop2), y=residual))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
ggplot(s2resid, aes(x=fitted(stop2), y=dev.resid))+geom_point()
ggplot(s2resid, aes(x=fitted(stop2), y=std.resid))+geom_point()
ggplot(s2resid, aes(x=fitted(stop2), y=pearson.resid))+geom_point()
gather(s2resid, key="resid.type", value="residual", -c(eth, stops, predicted)) %>% ggplot(aes(x=stops, y=residual, col=eth))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
gather(s2resid, key="resid.type", value="residual", -c(eth, stops, predicted)) %>% ggplot(aes(x=stops, y=residual))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
glimpse(frisk)
frisk$eth <- as.factor(frisk$eth)
stop2 <- glm(stops~eth, data=frisk, family=poisson, offset=log(past.arrests))
ggplot(stop2, aes(x=.fitted, y=.resid))+geom_point()
stop2$fitted.values
summary(stop2$fitted.values)
summary(log(stop2$fitted.values))
s2resid <- data.frame(eth=frisk$eth, stops = frisk$stops, dev.resid = residuals(stop2, type="deviance"), pearson.resid = residuals(stop2, type="pearson"), std.resid = residuals(stop2, type="response"), predicted = predict(stop2, frisk[,-1], type="response"))
(s2resid$stops-s2resid$predicted)/sqrt(s2resid$predicted) %>% head()
stop3 <- glm(stops~eth+factor(precinct), data=frisk, family=poisson, offset=log(past.arrests))
s3resid <- data.frame(eth=frisk$eth, precinct = frisk$precinct, stops = frisk$stops, dev.resid = residuals(stop3, type="deviance"), pearson.resid = residuals(stop3, type="pearson"), std.resid = residuals(stop3, type="response"), predicted = predict(stop3, frisk[,-1], type="response"))
gather(s2resid, key="resid.type", value="residual", -c(eth, stops, predicted)) %>% ggplot(aes(x=stops, y=residual))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
gather(s3resid, key="resid.type", value="residual", -c(eth, stops, predicted)) %>% ggplot(aes(x=stops, y=residual))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
gather(s3resid, key="resid.type", value="residual", -c(eth, stops, predicted, precinct)) %>% ggplot(aes(x=stops, y=residual))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
ggplot(frisk, aes(x=precinct, y=stops))+geom_point()
ggplot(frisk, aes(x=precinct, y=stops, col=eth))+geom_point()
sum(s2resid$std.resid^2/s2resid$predicted)
sum(s3resid$std.resid^2/s3resid$predicted)
pchisq(279399.4, df=898)
pchisq(214744.1, df=898)
summary(stop3)
summary(stop2)
pchisq(214744.1, df=822)
pchisq(279399.4, df=896)
mean(frisk$stops)
var(frisk$stops)
length(unique(frisk$precinct))
length(unique(frisk$eth))
3*75
xtabs(~eth+precinct, data=frisk)
gather(s3resid, key="resid.type", value="residual", -c(eth, stops, predicted, precinct)) %>% ggplot(aes(x=log(stops), y=residual))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
stop4 <- glm(stops~eth+factor(precinct), data=frisk, family=quasipoisson, offset=log(past.arrests))
s4resid <- data.frame(eth=frisk$eth, precinct = frisk$precinct, stops = frisk$stops, dev.resid = residuals(stop4, type="deviance"), pearson.resid = residuals(stop4, type="pearson"), std.resid = residuals(stop4, type="response"), predicted = predict(stop4, frisk[,-1], type="response"))
gather(s4resid, key="resid.type", value="residual", -c(eth, stops, predicted, precinct)) %>% ggplot(aes(x=log(stops), y=residual))+geom_point()+facet_wrap(~resid.type, scales = "free_y")
stop4 <- glm(stops~eth+factor(precinct), data=frisk, family=negative.binomial, offset=log(past.arrests))
stop4 <- glm(stops~eth+factor(precinct), data=frisk, family=nb, offset=log(past.arrests))
stop4 <- glm.nb(stops~eth+factor(precinct), data=frisk, offset=log(past.arrests))
summary(stop2)$dispersion
summary(stop3)$dispersion
stop4 <- glm(stops~eth+factor(precinct), data=frisk, family=quasipoisson, offset=log(past.arrests))
summary(stop4)$dispersion
data(HistData::Dactyl)
library(HistData)
data("Dactyl")
head(Dactyl)
length(unique(Dactyl$Foot))
data("Yeast")
head(Yeast)
summary(stop3)
141283/822
library(dplyr)
library(ggplot2)
library(visNetwork)
propComp <- read.csv("prop-comp.csv", header=TRUE)
propVis <- read.csv("peak-prop-vis.csv", header=TRUE)
View(propVis)
View(propComp)
propComp <- read.csv("prop-comp.csv", header=TRUE)
propVis <- read.csv("peak-prop-vis.csv", header=TRUE)
?geom_bar
?stat_count
?visNetwork
propVisLong <- gather(propVis, key="Component", value="Credits", -proposal)
library(tidyr)
propVisLong <- gather(propVis, key="Component", value="Credits", -proposal)
View(propVisLong)
currentndf <- filter(propVisLong, proposal=="current") %>% rename(id=Component, value=Credits)
View(currentndf)
currentndf <- filter(propVisLong, proposal=="current") %>% rename(id=Component, value=Credits) %>% select(-proposal)
tempdf <- filter(propComp, proposal=="current") %>% rename(id=item, value=Credits) %>% select(id, value)
tempdf <- filter(propComp, proposal=="current") %>% rename(id=item, value=credits) %>% select(id, value)
currentndf <- rbind.data.frame(currentndf, tempdf)
currentndf <- rbind.data.frame(currentndf, data.frame(id="Current", value=124))
currentedf <- filter(propVisLong, proposal=="current") %>% rename(from=Component, to=proposal) %>% select(from, to)
tempedf <- filter(propComp, proposal=="current") %>% rename(from=item, to=block) %>% select(from, to)
currentedf <- rbind.data.frame(currentedf, tempedf)
visNetwork(nodes=currentndf, edges = currentedf)
sb <- read.csv("craters-cleaned.csv", header = TRUE)
#separate species
sb3 <- filter(sb, species=="3T")
View(sb)
?seq()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
x <- seq(from=1, to=10, length.out = 100)
rn <- rnorm(100, mean=0, sd=1.25) #random error
y <- 3*x+1+rn
df <- data.frame(x, y)
library(ggplot2)
ggplot(df, aes(x=x, y=y))+geom_point()
pcdf <- prcomp(df)
pcdf$sdev
pcdf$x
pcdf$rotation
?prcomp
library(patchwork)
g <- ggplot(df, aes(x=x, y=y))+geom_point()
p <- ggplot(pcdf, aes(x=x$PC1, y=x$PC2))+geom_point()
p <- ggplot(pcdf$x, aes(x=PC1, y=PC2))+geom_point()
p <- ggplot(data.frame(pcdf$x), aes(x=PC1, y=PC2))+geom_point()
g+p
pcdf2 <- prcomp(df, center = TRUE, scale. = TRUE)
p2 <- ggplot(data.frame(pcdf2$x), aes(x=PC1, y=PC2))+geom_point()
g+p+p2
pcdf2$rotation
pcdf2$sdev
df %*% pcdf$rotation
pcdf$sdev^2/cumsum(pcdf$sdev^2)
pcdf$sdev^2/sum(pcdf$sdev^2)
sb <- read.csv("craters-cleaned.csv", header = TRUE)
#separate species
sb3 <- filter(sb, species=="3T")
library(dplyr)
#separate species
sb3 <- filter(sb, species=="3T")
#zero varience lists
zv3 <- 5+which(sapply(6:52, function(x) var(sb3[,x]))==0)
#3t with non-zero-var
sb3tnzv <- sb3[, -zv3]
head(sb3tnzv)
sb3tnzv
write.csv(sb3tnzv, "/home/jpreszler/github-web/jpreszler/static/files/sb3tnzv.csv", row.names = FALSE)
setwd("~/github-web/jpreszler/content/post")
setwd("~/github-web/jpreszler/")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
pcdf$rotation
df[1,]
df[1,]%*%pcdf$rotation[,1]
pcdf$rotation[,1]
.307*1+.95*3.157
pcdf$x[1,]
rotm <- matrix(pcdf$rotation)
rotm
rotm <- matrix(pcdf$rotation, ncol = 2)
rotm
df[1,]%*%rotm
t(df[1,])%*%rotm
rotm %*% df[1,]
pcdf$x %>% head()
df[1,] * rotm
df[1,] * rotm %>% sum()
prcom(df, retx=TRUE)
prcomp(df, retx=TRUE)
prcomp(df)
prcomp(df)$x
prcomp(df, retx=TRUE)$x
rotm*c(1,0)
rotm*t(c(1,0))
t(c(1,0))
t(c(1,0))*rotm
c(1,0)*rotm
rotm*t(c(0,1))
rotm*c(0,1)
.951568/.3074385
pcdf$rotation[,1]
.3074385^2+.951568^2
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
