<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VisNetwork on Jason I. Preszler</title>
    <link>/tags/visnetwork/</link>
    <description>Recent content in VisNetwork on Jason I. Preszler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Jason Preszler</copyright>
    <lastBuildDate>Mon, 18 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/visnetwork/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Maps Majors in Neo4J</title>
      <link>/post/2018-06-18-neo4j-majors/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-06-18-neo4j-majors/</guid>
      <description>UPDATE (6/20/2018) The cypher query for Table 3 only used components with “optional” courses so the capstone and topics compnents of the Math/CS major weren’t included in table 3.
UPDATE (6/19/2018) The original version of this post used incorrectly loaded data that caused to “Core” of every major to have the same classes attached to it. This was noticed by my colleague Dave Rosoff and has been corrected.</description>
    </item>
    
    <item>
      <title>Maps Minors in Neo4J</title>
      <link>/post/2018-06-16-neo4j-demo/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-06-16-neo4j-demo/</guid>
      <description>A college curriculum seems like something that is a natural fit for a graph database. My last post collected data from the College of Idaho’s online catalog, using that and some information about majors and minors I’ve populated a graph database in Neo4j. In this post I’ll show how to do some basic queries that return tabular data as well as graph data using .
Graph DB Basics For those who haven’t had much discrete math or computer science, a graph is a collection of nodes (aka vertices) and edges that connect nodes.</description>
    </item>
    
  </channel>
</rss>